# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Credentials {
  email: String!
}

type User {
  id: String!
  name: String!
  credentials: Credentials!
}

type PaginationMetadata {
  currentPage: Float!
  totalPages: Float!
  totalItemsCount: Float!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Float
  previousPage: Float
}

type UserPaginated {
  items: [User!]!
  meta: PaginationMetadata!
}

type Query {
  getManyUsers(pagination: PaginationInput!, filters: UserFilters!): UserPaginated!
  getUserById(id: String!): User!
  getCredentials(filters: CredentialFilters!): [Credentials!]!
}

input PaginationInput {
  take: Float!
  skip: Float!
}

input UserFilters {
  filter: UserFilterOptions
}

input UserFilterOptions {
  Equals: UserFilterEqualsOperation!
  Like: UserFilterLikeOperation!
  Not: UserFilterNotOperation!
  And: [UserFilterAndOperation!]!
  Or: [UserFilterOrOperation!]!
}

input UserFilterEqualsOperation {
  id: String
  name: String
}

input UserFilterLikeOperation {
  id: String
  name: String
}

input UserFilterNotOperation {
  id: String
  name: String
}

input UserFilterAndOperation {
  id: String
  name: String
}

input UserFilterOrOperation {
  id: String
  name: String
}

input CredentialFilters {
  filter: CredentialsFilterOptions
}

input CredentialsFilterOptions {
  Equals: CredentialsFilterEqualsOperation!
  Like: CredentialsFilterLikeOperation!
  Not: CredentialsFilterNotOperation!
  And: [CredentialsFilterAndOperation!]!
  Or: [CredentialsFilterOrOperation!]!
}

input CredentialsFilterEqualsOperation {
  email: String
}

input CredentialsFilterLikeOperation {
  email: String
}

input CredentialsFilterNotOperation {
  email: String
}

input CredentialsFilterAndOperation {
  email: String
}

input CredentialsFilterOrOperation {
  email: String
}

type Mutation {
  createUser(createUserDto: CreateUserDto!): User!
  updateUserById(updateUserById: UpdateUserDto!): User!
  deleteUserById(id: String!): Boolean!
}

input CreateUserDto {
  name: String!
  email: String!
  password: String!
}

input UpdateUserDto {
  id: String!
  name: String
}