# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Credentials {
  email: String!
}

type User {
  id: String!
  name: String!
  credentials: Credentials!
}

type PaginationMetadata {
  currentPage: Float!
  totalPages: Float!
  totalItemsCount: Float!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Float
  previousPage: Float
}

type UserPaginated {
  items: [User!]!
  meta: PaginationMetadata!
}

input CredentialsFilter {
  equals: CredentialsFilterableEntity
  like: CredentialsFilterableEntity
  not: CredentialsFilterableEntity
  and: [CredentialsFilterableEntity!]
  or: [CredentialsFilterableEntity!]
}

input CredentialsFilterableEntity {
  id: String
  email: String
}

input UserFilter {
  equals: UserFilterableEntity
  like: UserFilterableEntity
  not: UserFilterableEntity
  and: [UserFilterableEntity!]
  or: [UserFilterableEntity!]
}

input UserFilterableEntity {
  id: String
  name: String
  credentials: CredentialsFilterableEntity
}

type Query {
  getManyUsers(pagination: PaginationInput!, filters: UserFilters!): UserPaginated!
  getUserById(id: String!): User!
}

input PaginationInput {
  take: Float!
  skip: Float!
}

input UserFilters {
  equals: UserFilterableEntity
  like: UserFilterableEntity
  not: UserFilterableEntity
  and: [UserFilterableEntity!]
  or: [UserFilterableEntity!]
}

type Mutation {
  createUser(createUserDto: CreateUserDto!): User!
  updateUserById(updateUserById: UpdateUserDto!): User!
  deleteUserById(id: String!): Boolean!
}

input CreateUserDto {
  name: String!
  email: String!
  password: String!
}

input UpdateUserDto {
  id: String!
  name: String
}